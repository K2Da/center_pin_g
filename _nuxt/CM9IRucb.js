import{g as i,o as n,c as m,C as _,w as l,d as r,F as u,e as p}from"./C1f69h3r.js";const k=i({__name:"NaviLink",props:{current:{},m:{}},setup(s){return(t,a)=>{const e=p;return n(),m(u,null,[t.current!=="detail"?(n(),_(e,{key:0,to:{name:"team-detail",query:{m:t.m}},"no-prefetch":""},{default:l(()=>[r("戦績")]),_:1},8,["to"])):(n(),m(u,{key:1},[r("戦績")],64)),r(" | "),t.current!=="member"?(n(),_(e,{key:2,to:{name:"team-member",query:{m:t.m}},"no-prefetch":""},{default:l(()=>[r("編成")]),_:1},8,["to"])):(n(),m(u,{key:3},[r("編成")],64))],64)}}}),y=s=>{for(const e of s.matches)e.wl=e.opponent_team_key===e.loser_key,e.score_text=e.wl?`${e.winner_score} - ${e.loser_score}`:`${e.loser_score} - ${e.winner_score}`;const t={};for(const[e,o]of s.tournaments.entries())for(const c of o.player_list)t[c]?t[c].count++:t[c]={tournament:e,count:1};const a=Object.keys(t);return a.sort((e,o)=>t[e].tournament===t[o].tournament?t[o].count-t[e].count:t[e].tournament-t[o].tournament),{...s,players:a,playerStats:t}};export{k as _,y as t};
